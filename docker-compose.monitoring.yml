services:
  prometheus:
    image: prom/prometheus:v2.45.6
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - backend-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana:/etc/grafana/provisioning
      - ./grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - backend-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro #읽기 전용 데이터 - 루트 파일 시스템
      - /var/run:/var/run:rw #읽기 전용 데이터 - 런타임 데이터
      - /sys:/sys:ro  #읽기 전용 데이터 - 커널, 하드웨어, 드라이버 정보 등등
      - /var/lib/docker/:/var/lib/docker:ro #읽기 전용 데이터 - 도커 정보 데이터
    networks:
      - backend-network

#  postgres-exporter:
#    image: prometheuscommunity/postgres-exporter
#    container_name: postgres-exporter
#    environment:
#      #DATA_SOURCE_NAME: "postgresql://postgres:postgres@postgresql-db:5432/mydatabase?sslmode=disable"
#      DATA_SOURCE_NAME: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=${POSTGRES_SSLMODE}"
#    ports:
#      - "9187:9187"
#    networks:
#      - backend-network

  redis-exporter:
    image: oliver006/redis_exporter
    container_name: redis-exporter
    environment:
      REDIS_ADDR: redis:6379
    ports:
      - "9121:9121"
    networks:
      - backend-network
#alertmanager, nginx-exporter, node-exporter 필요 시 추가

volumes:
  db-data:
  build_folder:
  grafana-data:
    driver: local

networks:
  backend-network:
    driver: bridge
